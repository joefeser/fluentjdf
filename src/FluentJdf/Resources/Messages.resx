<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CanOnlyOperateOnJdfNode" xml:space="preserve">
    <value>Can only operate on JDF node.  The node is a {0}</value>
  </data>
  <data name="CanOnlyOperateOnResourceLink" xml:space="preserve">
    <value>Can only operate on resource link.  The node is a {0}</value>
  </data>
  <data name="ElementExtensions_JdfParent_NoJdfParentFound" xml:space="preserve">
    <value>Could not find JDF parent for element {0}</value>
  </data>
  <data name="ElementExtensions_FirstJdf_NodeNotJdfAndNoJdfParent" xml:space="preserve">
    <value>This node is not a JDF and it does not have a JDF parent.  The node is {0}</value>
  </data>
  <data name="JdfElementExtensions_LinkResource_ResourceNameOrIdOrBothRequired" xml:space="preserve">
    <value>Linking a resource requires either the resource name or the id (or both).</value>
  </data>
  <data name="ElementExtensions_JdfRoot_NoJdfRootFound" xml:space="preserve">
    <value>The element {0} does not have a JDF root</value>
  </data>
  <data name="ElementExtensions_AddContent_RequiresContentToAdd" xml:space="preserve">
    <value>AddContent requires content to add</value>
  </data>
  <data name="ResourceExtensions_Resource_ResourceWithIdCannotBeFound" xml:space="preserve">
    <value>Resource with ID {0} cannot be found</value>
  </data>
  <data name="JdfElementExtensions_LinkResource_CouldNotFindResourceWithGivenIdAndNameWasNotProvided" xml:space="preserve">
    <value>Could not find resource with id {0} and could not create it because name was not provided</value>
  </data>
  <data name="Loader_Loader_FailedToLoadAndCompileSchema" xml:space="preserve">
    <value>Failed to load and compile JDF schema.  The error is {0}</value>
  </data>
  <data name="ElementExtensions_ValidateJdf_ValidateJdfRequiresDocumentOfTypeTicket" xml:space="preserve">
    <value>ValidateJdf requires the document to be of type Ticket.  Use Ticket.Create().</value>
  </data>
  <data name="PassThroughEncoder_Encode_CannotEncodeMoreThanOnePart" xml:space="preserve">
    <value>Pass through encoder cannot encode a transmission part collection containing more than one part.</value>
  </data>
  <data name="TransmissionPart_CannotCreatePartAsFileDoesNotExist" xml:space="preserve">
    <value>Cannot create transmission part from file {0} because it does not exist</value>
  </data>
  <data name="XmlTransmissionPart_FailedToLoadXDocumentFromFile" xml:space="preserve">
    <value>Failed to load XDocument from {0}</value>
  </data>
  <data name="FailedToLoadXDocumentFromStream" xml:space="preserve">
    <value>Failed to load XDocument from stream</value>
  </data>
  <data name="JmfElementExtensions_ThrowExceptionIfNotJmfElement_CanOnlyOperateOnJmfNodes" xml:space="preserve">
    <value>Can only operate on JMF nodes.  The name is {0}.</value>
  </data>
  <data name="EncodingSettings_ThrowExceptionIfTypeIsNotIEncoding" xml:space="preserve">
    <value>Encodings must be of type IEncoding</value>
  </data>
  <data name="TransmissionPartSettings_ThrowExceptionIfTypeIsNotITransmissionPart" xml:space="preserve">
    <value>TransmissionParts must be of type ITransmissionPart</value>
  </data>
  <data name="TransmissionSettings_ThrowExceptionIfTypeIsNotITransmitter" xml:space="preserve">
    <value>The assigned transmitter must implement ITransmitter</value>
  </data>
  <data name="TransmitterFactory_GetTransmitterForScheme_SchemeNotConfigured" xml:space="preserve">
    <value>Scheme {0} is not configured with a transmitter.</value>
  </data>
  <data name="TransmissionPartCollection_Add_TransmissionPartExists" xml:space="preserve">
    <value>Transmission part with id {0} already exists</value>
  </data>
  <data name="HttpTransmissionSettingsBuilder_TimeoutInSeconds_MustNotBeLessThanZero" xml:space="preserve">
    <value>Timeout in seconds must not be less than zero unless set to Timeout.Infinite</value>
  </data>
  <data name="HttpTransmitter_Transmit_AtLeastOneTransmissionPartIsRequired" xml:space="preserve">
    <value>At least one transmission part is required for transmission.</value>
  </data>
  <data name="HttpTransmitter_Transmit_RequiresHttpUrl" xml:space="preserve">
    <value>HTTP transmitter only works with http urls</value>
  </data>
  <data name="HttpTransmitter_Transmit_HttpTransmitter_UnexpectedException" xml:space="preserve">
    <value>HttpTransmitter failed to transmit {0} because of unexpected exception</value>
  </data>
  <data name="Ticket_Transmit_Failed" xml:space="preserve">
    <value>Failed to transmit ticket to {0}</value>
  </data>
  <data name="JmfElementExtensions_AddJmfElement_JMFMustBeRoot" xml:space="preserve">
    <value>Can only add JMF as root element.  Root element {0} already exists</value>
  </data>
  <data name="JmfElementExtensions_ThrowExceptionIfNotInMessage_CannotOperateOnElementUnlessItIsInMessage" xml:space="preserve">
    <value>The element must be contained in a Message object</value>
  </data>
  <data name="Message_ModifyJmfNode_RootMustExistAndMustbeJmf" xml:space="preserve">
    <value>The root of the Message must exist and must be a JMF</value>
  </data>
  <data name="FluentJdfDocumentBase_FluentJdfDocumentBase_FluentJDF_RootNodeRequired" xml:space="preserve">
    <value>FluentJDF requires a root node when copying a document.</value>
  </data>
  <data name="Ticket_ModifyJdfNode_RootMustExistAndBeJdf" xml:space="preserve">
    <value>Root must exist and must be JDF</value>
  </data>
  <data name="AtLeastOneProcessMustBeSpecified" xml:space="preserve">
    <value>You must pass at least one type in order to create a process</value>
  </data>
  <data name="ElementExtensions_ValidateJmf_MessageRequired" xml:space="preserve">
    <value>ValidateJmf requires the document to be of type Message.  Use Message.Create()</value>
  </data>
  <data name="ElementExtensions_ThrowExceptionIfNotJdfOrJmfElement" xml:space="preserve">
    <value>Cannot operate on {0} element.  This extension only operate on JDF or JMF nodes.</value>
  </data>
  <data name="JmfElementExtensions_SetSenderId_SenderIdMustBeProvided" xml:space="preserve">
    <value>The provided sender id is null or whitespace and no default sender id is configured</value>
  </data>
  <data name="TransmissionLogger_Log_FailedToLog" xml:space="preserve">
    <value>Unexpected error attempting to log transmission.</value>
  </data>
  <data name="TemplateExpansionException_MessageText" xml:space="preserve">
    <value>Error occurred at line: </value>
  </data>
  <data name="TemplateExpansionException_MessagePositionText" xml:space="preserve">
    <value> position: </value>
  </data>
  <data name="FormulaTemplateItemFactory_CreateFormulaItem_InvalidFunctionNameMessage" xml:space="preserve">
    <value>Invalid function name {0} </value>
  </data>
  <data name="ErrorAtLineAndColumn" xml:space="preserve">
    <value>{0} at line {1} column {2}</value>
  </data>
  <data name="TableTemplateItem_Generate_DataSetHasNoTable" xml:space="preserve">
    <value>Supplied data set does not contain table </value>
  </data>
  <data name="CouldNotOpen" xml:space="preserve">
    <value>Could not open {0}</value>
  </data>
  <data name="TemplateItem_TemplateItem_VariableNameIsNotLegal" xml:space="preserve">
    <value>variable name {0} is not legal.  Variable names can be of the form varName or tableName.varName.  Additional dots are not legal</value>
  </data>
  <data name="FileDoesNotExist" xml:space="preserve">
    <value>File {0} does not exist</value>
  </data>
  <data name="GeneratedDocumentConfigurationBuilder_NameValue_NameAlreadyInNameValues" xml:space="preserve">
    <value>Name {0} is already contained in name values.</value>
  </data>
  <data name="GeneratedDocumentConfigurationBuilder_DataTable_TableWithNameAlreadyExists" xml:space="preserve">
    <value>Table with name {0} is already configured</value>
  </data>
  <data name="MimeEncoding_Decode_GeneralDecodingError" xml:space="preserve">
    <value>Error occured attempting to decode multipart
elated transmission.  The error is </value>
  </data>
  <data name="MimeEncoding_Decode_NoMessagePartsToDecode" xml:space="preserve">
    <value>Error occured attempting to parse through message, there are no parts to the transmission!</value>
  </data>
  <data name="FileTransmitter_Transmit_AtLeastOneTransmissionPartIsRequired" xml:space="preserve">
    <value>At least one transmission part is required for transmission.</value>
  </data>
  <data name="FileTransmitter_Transmit_RequiresHttpUrl" xml:space="preserve">
    <value>HTTP transmitter only works with http urls</value>
  </data>
  <data name="FolderInfoTypeEnum0AlreadyExists" xml:space="preserve">
    <value>FolderInfoTypeEnum '{0}' already exists.</value>
  </data>
  <data name="PartTypeMustBeAttachmentJdfOrJmfTheTypeGivenForFolderInfo" xml:space="preserve">
    <value>partType must be 'Attachment', 'Jdf' or 'Jmf'.  The type given for FolderInfo is {0}</value>
  </data>
  <data name="TheConfigurationOfTheFileTransmissionEncoderId0IsInvaild" xml:space="preserve">
    <value>The configuration of the file transmission encoder id {0} is invaild because it is configured not to send anything</value>
  </data>
  <data name="TheConfigurationOfTheFileTransmissionEncoderId0IsInvaildJMFNoJDF" xml:space="preserve">
    <value>The configuration of the file transmission encoder id {0} is invaild because it is configured to send JMF but not JDF and the attachment</value>
  </data>
  <data name="TheConfigurationOfTheFileTransmissionEncoderId0IsInvaildJDFNoAttach" xml:space="preserve">
    <value>The configuration of the file transmission encoder id {0} is invaild because it is configured to send JDF but not the attachment</value>
  </data>
  <data name="ErrorOccuredWhileTryingToEncodeTransmissionMessageIs" xml:space="preserve">
    <value>Error occured while trying to encode transmission.  Message is {0}</value>
  </data>
  <data name="QueueSubmissionParamsAreRequiredInSubmitQueueEntry" xml:space="preserve">
    <value>QueueSubmissionParams are required in SubmitQueueEntry</value>
  </data>
  <data name="ReSubmissionParamsAreRequiredInResubmitQueueEntry" xml:space="preserve">
    <value>ReSubmissionParams are required in ResubmitQueueEntry</value>
  </data>
  <data name="MustMapCIDsIsTrueAndNoMappingSuppliedForURL" xml:space="preserve">
    <value>mustMapCIDs is true and no mapping supplied for URL: '{0}'</value>
  </data>
  <data name="FailedToValidateExistingJDFSchemaFolderTheErrorIs0" xml:space="preserve">
    <value>Failed to validate existing JDF schema folder.  The error is {0}</value>
  </data>
</root>