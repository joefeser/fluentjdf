using System;
using System.Xml.Linq;
using System.Xml.Schema;
using FluentJdf.LinqToJdf;
using Onpoint.Commons.Core.CodeContracts;

namespace FluentJdf.Schema
{
    /// <summary>
    /// A mnessage generated by schema validation.
    /// </summary>
    public class ValidationMessage
    {
        /// <summary>
        /// Build the message from information in a validation event.
        /// </summary>
        public ValidationMessage(Object source, XmlSeverityType severityType, string message) {
            ParameterCheck.ParameterRequired(message, "message");

            ValidationMessageType = severityType == XmlSeverityType.Error
                                        ? ValidationMessageType.Error
                                        : ValidationMessageType.Warning;
            Message = message;
            XPath = LocalXPathOrRoot(source);
        }

        private string LocalXPathOrRoot(object o) {
            var xPath = "";
            if (o is XElement) {
                xPath = (o as XElement).LocalElementXPath();
            }
            else if (o is XAttribute) {
                xPath = (o as XAttribute).LocalAttributeXPath();
            }

            if (string.IsNullOrWhiteSpace(xPath)) {
                xPath = "/";
            }
            return xPath;
        }

        /// <summary>
        /// Gets the type of message.
        /// </summary>
        public ValidationMessageType ValidationMessageType { get; private set; }

        /// <summary>
        /// Gets the messaage.
        /// </summary>
        public string Message { get; private set; }

        /// <summary>
        /// Gets the xpath of the impacted element or root if it is not specific to an element.
        /// </summary>
        public string XPath { get; private set; }
    }
}
