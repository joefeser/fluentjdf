<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Onpoint.Commons.Logging</name>
  </assembly>
  <members>
    <member name="T:Onpoint.Commons.Logging.ILog">
      <summary>
            Common logging interface.
            </summary>
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Error(System.Object)">
      <summary>
            Log a message at the error level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Error(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the error level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.ErrorFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the error level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Fatal(System.Object)">
      <summary>
            Log a message at the fatal level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Fatal(System.Object,System.Exception)">
      <summary>
            Log a message and an exception at the fatal level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.FatalFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the fatal level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Debug(System.Object)">
      <summary>
            Log a message at the debug level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Debug(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the debug level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.DebugFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the debug level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Info(System.Object)">
      <summary>
            Log a message at the info level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Info(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the info level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.InfoFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the info level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Warn(System.Object)">
      <summary>
            Log a message at the warning level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.Warn(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the warning level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILog.WarnFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the warning level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="P:Onpoint.Commons.Logging.ILog.IsErrorEnabled">
      <summary>
            Gets <see langword="true" /> if error logging is enabled.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.ILog.IsFatalEnabled">
      <summary>
            Gets <see langword="true" /> if logging is enabled at the fatal level.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.ILog.IsDebugEnabled">
      <summary>
            Gets <see langword="true" /> if debug level logging is enabled.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.ILog.IsInfoEnabled">
      <summary>
            Gets <see langword="true" /> if info level logging is enabled.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.ILog.IsWarnEnabled">
      <summary>
            Gets <see langword="true" /> if warning level logging is enabled.
            </summary>
    </member>
    <member name="T:Onpoint.Commons.Logging.ILogProvider">
      <summary>
            Interface to get ILog instances.
            </summary>
    </member>
    <member name="M:Onpoint.Commons.Logging.ILogProvider.GetLogger(System.Type)">
      <summary>
            Gets the ILog implementation for the type.
            </summary>
      <param name="type" />
      <returns />
    </member>
    <member name="M:Onpoint.Commons.Logging.ILogProvider.GetLogger(System.String)">
      <summary>
            Gets the ILog implementation for the key.
            </summary>
      <param name="key" />
      <returns />
    </member>
    <member name="T:Onpoint.Commons.Logging.LogManager">
      <summary>
            Log manager.
            </summary>
    </member>
    <member name="M:Onpoint.Commons.Logging.LogManager.GetLogger(System.Type)">
      <summary>
            Gets the ILog implementation for the type.
            </summary>
      <param name="type" />
      <returns />
    </member>
    <member name="M:Onpoint.Commons.Logging.LogManager.GetLogger(System.String)">
      <summary>
            Gets the ILog implementation for the key.
            </summary>
      <param name="key" />
      <returns />
    </member>
    <member name="T:Onpoint.Commons.Logging.NullLog">
      <summary>
            ILog implementation that does nothing.
            </summary>
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Error(System.Object)">
      <summary>
            Log a message at the error level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Error(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the error level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.ErrorFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the error level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Fatal(System.Object)">
      <summary>
            Log a message at the fatal level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Fatal(System.Object,System.Exception)">
      <summary>
            Log a message and an exception at the fatal level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.FatalFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the fatal level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Debug(System.Object)">
      <summary>
            Log a message at the debug level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Debug(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the debug level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.DebugFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the debug level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Info(System.Object)">
      <summary>
            Log a message at the info level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Info(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the info level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.InfoFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the info level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Warn(System.Object)">
      <summary>
            Log a message at the warning level.
            </summary>
      <param name="message" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.Warn(System.Object,System.Exception)">
      <summary>
            Log a message and exception at the warning level.
            </summary>
      <param name="message" />
      <param name="exception" />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLog.WarnFormat(System.String,System.Object[])">
      <summary>
            Log a message using a format string at the warning level.
            </summary>
      <param name="format" />
      <param name="args" />
    </member>
    <member name="P:Onpoint.Commons.Logging.NullLog.IsErrorEnabled">
      <summary>
            Gets <see langword="true" /> if error logging is enabled.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.NullLog.IsFatalEnabled">
      <summary>
            Gets <see langword="true" /> if logging is enabled at the fatal level.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.NullLog.IsDebugEnabled">
      <summary>
            Gets <see langword="true" /> if debug level logging is enabled.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.NullLog.IsInfoEnabled">
      <summary>
            Gets <see langword="true" /> if info level logging is enabled.
            </summary>
    </member>
    <member name="P:Onpoint.Commons.Logging.NullLog.IsWarnEnabled">
      <summary>
            Gets <see langword="true" /> if warning level logging is enabled.
            </summary>
    </member>
    <member name="T:Onpoint.Commons.Logging.NullLogProvider">
      <summary>
            Implementation of ILogProvider that returns a do-nothing
            logger.
            </summary>
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLogProvider.GetLogger(System.Type)">
      <summary>
            Gets the ILog implementation for the type.
            </summary>
      <param name="type" />
      <returns />
    </member>
    <member name="M:Onpoint.Commons.Logging.NullLogProvider.GetLogger(System.String)">
      <summary>
            Gets the ILog implementation for the key.
            </summary>
      <param name="key" />
      <returns />
    </member>
  </members>
</doc>